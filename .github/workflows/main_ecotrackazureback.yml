name: Build and deploy Python project to Azure Function App - ecotrackazureback

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.9'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            python3-dev \
            gcc \
            g++ \
            pkg-config \
            python3-venv \
            libssl-dev \
            libffi-dev

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install --only-binary :all: grpcio==1.33.1
          pip install --only-binary :all: grpcio-tools==1.33.1
          pip install azure-functions
          pip install azure-functions-worker==1.1.9
          pip install azure-cosmos
          pip install -r requirements.txt

      - name: Generate host.json
        run: |
          echo '{
            "version": "2.0",
            "logging": {
              "applicationInsights": {
                "samplingSettings": {
                  "isEnabled": true,
                  "excludedTypes": "Request"
                }
              }
            },
            "extensionBundle": {
              "id": "Microsoft.Azure.Functions.ExtensionBundle",
              "version": "[3.*, 4.0.0)"
            }
          }' > host.json

      - name: Zip artifact for deployment
        run: |
          zip release.zip ./* -r
          zip -r release.zip host.json
          zip -r release.zip requirements.txt
          zip -r release.zip functions_app.py
          zip -r release.zip -x "venv/*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip     
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_9E38A761FBF744FDA59343E9E3E7C279 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_351ED43E49E04E749F28195046FE5F71 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D8CBD32658964A999627FD3270E185E8 }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'ecotrackazureback'
          slot-name: 'Production'
          package: release.zip
          respect-funcignore: true
          enable-python: true
          scm-do-build-during-deployment: false

      - name: 'Post Deploy Status'
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "Deployment completed successfully"
          else
            echo "Deployment failed"
            echo "Please check the Azure Function App logs for more details"
          fi
